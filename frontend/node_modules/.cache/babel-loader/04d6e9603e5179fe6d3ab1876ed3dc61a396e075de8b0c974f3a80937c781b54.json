{"ast":null,"code":"import TitleCmp from \"./TitleCmp.vue\";\nimport LangSelectBtn from \"./LangSelectBtn.vue\";\nimport ConnectBtn from \"./ConnectBtn.vue\";\nimport ProfileBtn from \"./ProfileBtn.vue\";\n// import { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"HeaderCmp\",\n  components: {\n    TitleCmp,\n    LangSelectBtn,\n    ConnectBtn,\n    ProfileBtn\n  },\n  data() {\n    connectionState: this.$store.getters.getConnectionState;\n    return {\n      headerOpacity: 1,\n      connectionState\n    };\n  },\n  computed: {\n    ...mapGetters(['getConnectionState'])\n  },\n  mounted() {\n    window.addEventListener(\"scroll\", this.handleScroll); // Ajoute un écouteur d'événements pour le défilement de la page lors de l'initialisation du composant\n  },\n  methods: {\n    handleScroll() {\n      // Obtenez la position verticale de défilement de la fenêtre\n      const scrollPosition = window.scrollY;\n\n      // Calculer l'opacité en fonction de la position de défilement\n      // Par exemple, vous pouvez réduire progressivement l'opacité à mesure que vous faites défiler vers le haut\n      this.headerOpacity = 1 - scrollPosition / 500; // 500 est la valeur de défilement à partir de laquelle vous voulez que le header soit complètement transparent\n\n      // Assurez-vous que l'opacité est toujours comprise entre 0 et 1\n      this.headerOpacity = Math.min(Math.max(this.headerOpacity, 0), 1);\n    }\n  }\n};","map":{"version":3,"names":["TitleCmp","LangSelectBtn","ConnectBtn","ProfileBtn","name","components","data","connectionState","$store","getters","getConnectionState","headerOpacity","computed","mapGetters","mounted","window","addEventListener","handleScroll","methods","scrollPosition","scrollY","Math","min","max"],"sources":["/Users/chris/Desktop/matcha_42/frontend/src/components/header/HeaderCmp.vue"],"sourcesContent":["<template>\n  <div\n    class=\"header\"\n    :style=\"{ opacity: headerOpacity }\"\n    :class=\"{ 'hidden-element': headerOpacity === 0 }\"\n  >\n    <TitleCmp></TitleCmp>\n\n    <div class=\"buttons--container\">\n      <div class=\"buttons\">\n        <LangSelectBtn></LangSelectBtn>\n        <template v-if=\"connectionState\">\n          <ProfileBtn></ProfileBtn>\n        </template>\n        <ConnectBtn></ConnectBtn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TitleCmp from \"./TitleCmp.vue\";\nimport LangSelectBtn from \"./LangSelectBtn.vue\";\nimport ConnectBtn from \"./ConnectBtn.vue\";\nimport ProfileBtn from \"./ProfileBtn.vue\";\n// import { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"HeaderCmp\",\n  components: {\n    TitleCmp,\n    LangSelectBtn,\n    ConnectBtn,\n    ProfileBtn,\n  },\n  data() {\n\tconnectionState: this.$store.getters.getConnectionState;\n    return {\n      headerOpacity: 1,\n\t  connectionState,\n    };\n  },\n  computed: {\n    ...mapGetters(['getConnectionState']),\n  },\n\n  mounted() {\n    window.addEventListener(\"scroll\", this.handleScroll); // Ajoute un écouteur d'événements pour le défilement de la page lors de l'initialisation du composant\n  },\n  methods: {\n    handleScroll() {\n      // Obtenez la position verticale de défilement de la fenêtre\n      const scrollPosition = window.scrollY;\n\n      // Calculer l'opacité en fonction de la position de défilement\n      // Par exemple, vous pouvez réduire progressivement l'opacité à mesure que vous faites défiler vers le haut\n      this.headerOpacity = 1 - scrollPosition / 500; // 500 est la valeur de défilement à partir de laquelle vous voulez que le header soit complètement transparent\n\n      // Assurez-vous que l'opacité est toujours comprise entre 0 et 1\n      this.headerOpacity = Math.min(Math.max(this.headerOpacity, 0), 1);\n    },\n  },\n};\n</script>\n\n<style lang=scss>\n.header {\n  position: fixed;\n  z-index: 1000;\n  width: 100%;\n  height: 200px;\n  margin: 0px;\n  display: flex;\n  align-items: top;\n  justify-content: space-between;\n  z-index: 1100;\n  /* Ajoutez le dégradé noir transparent */\n  background-image: linear-gradient(\n    to bottom,\n    rgb(0, 0, 0) 20%,\n    rgba(0, 0, 0, 0)\n  );\n\n  .buttons--container {\n    display: flex;\n    align-items: top;\n    margin-top: 10px;\n\n    .buttons {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-right: 10px;\n      height: fit-content;\n      width: auto;\n    }\n\n    @media (min-width: 200px) and (max-width: 700px) {\n      align-items: top;\n\n      .buttons {\n        margin-right: 10px;\n        margin-top: 0px;\n        display: grid;\n        align-items: center;\n      }\n    }\n  }\n}\n</style>"],"mappings":"AAqBA,OAAOA,QAAO,MAAO,gBAAgB;AACrC,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,UAAS,MAAO,kBAAkB;AACzC,OAAOC,UAAS,MAAO,kBAAkB;AACzC;;AAEA,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVL,QAAQ;IACRC,aAAa;IACbC,UAAU;IACVC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACRC,eAAe,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,kBAAkB;IACpD,OAAO;MACLC,aAAa,EAAE,CAAC;MACnBJ;IACC,CAAC;EACH,CAAC;EACDK,QAAQ,EAAE;IACR,GAAGC,UAAU,CAAC,CAAC,oBAAoB,CAAC;EACtC,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACRC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,YAAY,CAAC,EAAE;EACxD,CAAC;EACDC,OAAO,EAAE;IACPD,YAAYA,CAAA,EAAG;MACb;MACA,MAAME,cAAa,GAAIJ,MAAM,CAACK,OAAO;;MAErC;MACA;MACA,IAAI,CAACT,aAAY,GAAI,IAAIQ,cAAa,GAAI,GAAG,EAAE;;MAE/C;MACA,IAAI,CAACR,aAAY,GAAIU,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACZ,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}